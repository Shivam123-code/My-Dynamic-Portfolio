@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  body {
    @apply bg-gray-900 text-gray-100;
    perspective: 1000px;
  }
}

/* Existing styles... */
/* Keep all previous styles and add these new ones: */

.bg-grid-pattern {
  background-image: 
    linear-gradient(rgba(74, 222, 128, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(74, 222, 128, 0.1) 1px, transparent 1px);
  background-size: 40px 40px;
  animation: grid-move 20s linear infinite;
}

@keyframes grid-move {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(40px);
  }
}

.code-rain {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: repeating-linear-gradient(
    180deg,
    transparent 0,
    rgba(74, 222, 128, 0.1) 50%,
    transparent 100%
  );
  background-size: 100% 50px;
  animation: code-rain-fall 20s linear infinite;
  opacity: 0.5;
}

@keyframes code-rain-fall {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 1000px;
  }
}

.bg-pulse-ring {
  animation: pulse-ring 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  @apply absolute inset-0 rounded-full;
  background: linear-gradient(45deg, rgba(74, 222, 128, 0.5), rgba(59, 130, 246, 0.5));
}

@keyframes pulse-ring {
  0% {
    transform: scale(0.95);
    opacity: 0.5;
  }
  50% {
    transform: scale(1);
    opacity: 0.3;
  }
  100% {
    transform: scale(0.95);
    opacity: 0.5;
  }
}

/* Keep all other existing styles from the previous index.css */
.glow {
  text-shadow: 0 0 10px rgba(74, 222, 128, 0.5);
}

.card-glow {
  box-shadow: 0 0 20px rgba(74, 222, 128, 0.1);
}

.card-hover {
  transition: all 0.3s ease;
  transform-style: preserve-3d;
}

.card-hover:hover {
  transform: translateY(-5px) rotateX(5deg);
  box-shadow: 0 0 30px rgba(74, 222, 128, 0.2);
}

.gradient-border {
  position: relative;
  background: linear-gradient(to right, #1f2937, #111827);
}

.gradient-border::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: inherit;
  padding: 2px;
  background: linear-gradient(45deg, #4ade80, #3b82f6);
  -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
}

.floating {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
  100% {
    transform: translateY(0px);
  }
}

.rotate-3d {
  animation: rotate3d 15s linear infinite;
  transform-style: preserve-3d;
}

@keyframes rotate3d {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(360deg);
  }
}

.matrix-bg {
  position: relative;
  overflow: hidden;
}

.matrix-bg::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(rgba(0, 255, 0, 0.03) 2px, transparent 2px),
              linear-gradient(90deg, rgba(0, 255, 0, 0.03) 2px, transparent 2px);
  background-size: 3em 3em;
  animation: matrix 20s linear infinite;
}

@keyframes matrix {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-50%);
  }
}

.cyber-button {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.cyber-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(
    120deg,
    transparent,
    rgba(74, 222, 128, 0.2),
    transparent
  );
  transition: all 0.5s ease;
}

.cyber-button:hover::before {
  left: 100%;
}

@keyframes blink {
  0%, 100% { opacity: 1; }
  50% { opacity: 0; }
}

.animate-blink {
  animation: blink 1s step-end infinite;
}

.typing-text {
  border-right: 2px solid transparent;
  white-space: nowrap;
  overflow: hidden;
  animation: typing 3.5s steps(40, end);
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

.tilt-on-hover {
  transition: transform 0.3s ease-out;
}

.tilt-on-hover:hover {
  transform: perspective(1000px) rotateX(10deg) rotateY(10deg) scale(1.05);
}